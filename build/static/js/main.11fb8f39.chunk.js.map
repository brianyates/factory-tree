{"version":3,"sources":["config/keys.js","config/prodKeys.js","components/FormInput.js","components/FormSelect.js","components/Icon.js","components/FormSortFilter.js","utils/formValidationFunctions.js","utils/treeActionFunctions.js","utils/factorySortingFunctions.js","utils/appFunctions.js","components/FormTreeActions.js","components/TreeActions.js","components/LoadingTrees.js","components/Factory.js","components/Tree.js","components/FormFactoryName.js","components/FormFactoryChildren.js","components/EditFactory.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","require","MONGO_URI","process","HOST_URI","FormInput","_ref","label","type","name","placeholder","value","handleInputChange","error","react_default","a","createElement","className","min","concat","onChange","FormSelect","arr","disabled","key","i","push","renderOptions","vectors","times","path","viewBox","pencil","trash","angle","search","check","expand","collapse","Icon","icon","style","aria-hidden","role","xmlns","d","FormSortFilter","state","focused","_this2","this","_this$props","props","sortSelection","handleSortSelection","filterInput","handleFilterInput","handleFilterClear","toggleAllFactories","react","onFocus","setState","onBlur","onClick","components_Icon","width","margin","height","Component","requiredField","input","positiveInteger","test","parseInt","greaterThanLowerBound","lowerBound","upperBound","checkForErrors","values","generateChildren","numChildren","errorObj","checkForChildrenErrors","resetFormValues","submitting","hasFormError","getFormValues","_this$state","handleCheckBoxClick","event","_event$target","target","Object","defineProperty","formErrors","handleSubmit","_this","preventDefault","keys","forEach","val","axios","post","then","status","Error","createFlash","catch","err","console","log","timeDown","b","createdAt","timeUp","alphaDown","alphaUp","handleFactorySort","factories","toConsumableArray","sort","handleFactoryToggle","index","open","option","map","factory","factoryAdded","showTreeActions","factoryRemoved","id","filter","_id","selectedFactory","factoryUpdated","updatedFactory","handleFactorySelection","editName","editLowerBound","editUpperBound","editNumChildren","handleEditCancel","message","flashMsg","setTimeout","submitUpdate","put","_ref2","closeTreeActions","openTreeActions","FormTreeActions","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","bind","assertThisInitialized","onSubmit","components_FormInput","paddingBottom","fontSize","borderTop","display","components_FormSelect","components_FormSortFilter","TreeActions","title","components_FormTreeActions","LoadingTrees","msg","tree","focusable","fill","marginTop","color","Factory","selected","children","length","child","TreeRoot","handleHeaderClick","renderContent","dataLoadingError","renderFactories","components_LoadingTrees","re","RegExp","components_Factory","FormFactoryName","FormFactoryChildren","EditFactory","handleDelete","window","confirm","delete","areChildrenDisabled","_props$selectedFactor","components_FormFactoryName","components_FormFactoryChildren","verticalAlign","marginRight","App","get","data","socket","socketIOClient","on","_this3","components_TreeActions","Tree","components_EditFactory","Boolean","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.11fb8f39.chunk.js","sourcesContent":["if (process.env.NODE_ENV === 'production'){\n    module.exports = require('./prodKeys');\n}\nelse {\n   module.exports = require('./devKeys');\n}\n","module.exports = {\n    MONGO_URI: process.env.MONGO_URI,\n    HOST_URI: process.env.HOST_URI\n}","import React from 'react';\n\nconst FormInput = ({label, type, name, placeholder, value, handleInputChange, error}) => {\n    return(\n        <div className='form-group'>\n            <label>{label}</label>\n            <input \n                min={type==='number' ? '0': ''}\n                type={type} \n                name={name}\n                className={`form-input${error ? ' input-error' : ''}`} \n                placeholder={placeholder}\n                value={value}\n                onChange={handleInputChange}\n            />\n            {error && <div className='error-msg'>{error}</div>}\n        </div>\n    )\n}\n\nexport default FormInput;","import React from 'react';\n\nconst CHILD_LIMIT = 15;\nconst renderOptions = () => {\n    var arr = [<option value='' disabled key='opt-init'>Select an option</option>];\n    for(let i = 0; i <= CHILD_LIMIT; i++){\n        arr.push(<option key={`opt-${i}`} value={i}>{i}</option>);\n    }\n    return arr;\n}\n\nconst FormSelect = ({placeholder, value, handleInputChange, name, error}) => {\n    return(\n        <div className='form-group'>\n            <label>Number of Children:</label>\n            <select value={value} onChange={handleInputChange} name={name} className={`form-input${error ? ' input-error' : ''}`} >\n                {renderOptions()}\n            </select>\n            {error && <div className='error-msg'>{error}</div>}\n        </div>\n    )\n}\n\nexport default FormSelect;","import React from 'react';\n\nconst vectors = {\n    times: {\n        path: 'M207.6 256l107.72-107.72c6.23-6.23 6.23-16.34 0-22.58l-25.03-25.03c-6.23-6.23-16.34-6.23-22.58 0L160 208.4 52.28 100.68c-6.23-6.23-16.34-6.23-22.58 0L4.68 125.7c-6.23 6.23-6.23 16.34 0 22.58L112.4 256 4.68 363.72c-6.23 6.23-6.23 16.34 0 22.58l25.03 25.03c6.23 6.23 16.34 6.23 22.58 0L160 303.6l107.72 107.72c6.23 6.23 16.34 6.23 22.58 0l25.03-25.03c6.23-6.23 6.23-16.34 0-22.58L207.6 256z',\n        viewBox: '0 0 320 512'\n    },\n    pencil: {\n        path: 'M402.6 83.2l90.2 90.2c3.8 3.8 3.8 10 0 13.8L274.4 405.6l-92.8 10.3c-12.4 1.4-22.9-9.1-21.5-21.5l10.3-92.8L388.8 83.2c3.8-3.8 10-3.8 13.8 0zm162-22.9l-48.8-48.8c-15.2-15.2-39.9-15.2-55.2 0l-35.4 35.4c-3.8 3.8-3.8 10 0 13.8l90.2 90.2c3.8 3.8 10 3.8 13.8 0l35.4-35.4c15.2-15.3 15.2-40 0-55.2zM384 346.2V448H64V128h229.8c3.2 0 6.2-1.3 8.5-3.5l40-40c7.6-7.6 2.2-20.5-8.5-20.5H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V306.2c0-10.7-12.9-16-20.5-8.5l-40 40c-2.2 2.3-3.5 5.3-3.5 8.5z',\n        viewBox: '0 0 576 512'\n    },\n    trash: {\n        path: 'M296 432h16a8 8 0 0 0 8-8V152a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v272a8 8 0 0 0 8 8zm-160 0h16a8 8 0 0 0 8-8V152a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v272a8 8 0 0 0 8 8zM440 64H336l-33.6-44.8A48 48 0 0 0 264 0h-80a48 48 0 0 0-38.4 19.2L112 64H8a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h24v368a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V96h24a8 8 0 0 0 8-8V72a8 8 0 0 0-8-8zM171.2 38.4A16.1 16.1 0 0 1 184 32h80a16.1 16.1 0 0 1 12.8 6.4L296 64H152zM384 464a16 16 0 0 1-16 16H80a16 16 0 0 1-16-16V96h320zm-168-32h16a8 8 0 0 0 8-8V152a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v272a8 8 0 0 0 8 8z',\n        viewBox: '0 0 448 512'\n    },\n    angle: {\n        path: 'M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z',\n        viewBox: '0 0 256 512'\n    },\n    search: {\n        path: 'M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z',\n        viewBox: '0 0 512 512'\n    },\n    check: {\n        path: 'M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z',\n        viewBox: '0 0 512 512'\n    },\n    expand: {\n        path: 'M212.686 315.314L120 408l32.922 31.029c15.12 15.12 4.412 40.971-16.97 40.971h-112C10.697 480 0 469.255 0 456V344c0-21.382 25.803-32.09 40.922-16.971L72 360l92.686-92.686c6.248-6.248 16.379-6.248 22.627 0l25.373 25.373c6.249 6.248 6.249 16.378 0 22.627zm22.628-118.628L328 104l-32.922-31.029C279.958 57.851 290.666 32 312.048 32h112C437.303 32 448 42.745 448 56v112c0 21.382-25.803 32.09-40.922 16.971L376 152l-92.686 92.686c-6.248 6.248-16.379 6.248-22.627 0l-25.373-25.373c-6.249-6.248-6.249-16.378 0-22.627z',\n        viewBox: '0 0 448 512'\n    },\n    collapse: {\n        path: 'M4.686 427.314L104 328l-32.922-31.029C55.958 281.851 66.666 256 88.048 256h112C213.303 256 224 266.745 224 280v112c0 21.382-25.803 32.09-40.922 16.971L152 376l-99.314 99.314c-6.248 6.248-16.379 6.248-22.627 0L4.686 449.941c-6.248-6.248-6.248-16.379 0-22.627zM443.314 84.686L344 184l32.922 31.029c15.12 15.12 4.412 40.971-16.97 40.971h-112C234.697 256 224 245.255 224 232V120c0-21.382 25.803-32.09 40.922-16.971L296 136l99.314-99.314c6.248-6.248 16.379-6.248 22.627 0l25.373 25.373c6.248 6.248 6.248 16.379 0 22.627z',\n        viewBox: '0 0 448 512'\n    }\n};\n\nconst Icon = ({icon, style}) =>{\n    //Heights should be specified in the style attribute for IE compatibility\n    return(\n        <svg aria-hidden=\"true\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox={vectors[icon].viewBox} style={style}><path d={vectors[icon].path}></path></svg>\n    )\n}\n\nexport default Icon;","import React,{Component, Fragment} from 'react';\nimport Icon from './Icon';\n\nclass FormSortFilter extends Component{\n    state = {\n        focused: false\n    }\n    render(){\n        const {sortSelection, handleSortSelection, filterInput, handleFilterInput, handleFilterClear, toggleAllFactories} = this.props;\n        return(\n            <Fragment>\n                <h5>ADDITIONAL OPTIONS</h5>\n                <section>\n                    <div className='form-group'>\n                        <label>Filter Factories:</label>\n                        <input \n                            className='form-input search' \n                            placeholder='Type to filter by name' \n                            onChange={handleFilterInput}\n                            value={filterInput}\n                            onFocus={() => this.setState({focused: true})}\n                            onBlur={() => this.setState({focused: false})}\n                        />\n                        <button className={`input-btn right${this.state.focused ? ' search-focus': ''}`} onClick={() => handleFilterClear()}>\n                            {filterInput ? <Icon icon='times' style={{width: 14, margin: '0 1px'}}/> : <Icon icon='search' style={{width: 16, height: 16}} />}\n                        </button>\n                    </div>\n                    <div className='form-group'>\n                        <label>Sort Factories By:</label>\n                        <select value={sortSelection} className='form-input' onChange={handleSortSelection}>\n                            <option value='timeDown'>Create Date (Descending)</option>\n                            <option value='timeUp'>Create Date (Ascending)</option>\n                            <option value='alphaDown'>Factory Name (Descending)</option>\n                            <option value='alphaUp'>Factory Name (Ascending)</option>\n                        </select>\n                    </div>\n                    <div className='toggle-btns'>\n                        <button onClick={() => toggleAllFactories(true)}>[+] Expand All</button>\n                        <button onClick={() => toggleAllFactories(false)}>[-] Collapse All</button>\n                    </div>\n                </section>\n            </Fragment>\n        )\n    }\n}\n\nexport default FormSortFilter;","const requiredField = input => {\n    if(!input && (input !== 0)){\n        return 'This is a required field';\n    }\n    return null;\n}\nconst positiveInteger = input => {\n    if(/^\\d+$/.test(input) && parseInt(input) >= 0){\n        return null;\n    }\n    return 'Please enter a positive integer';\n}\nconst greaterThanLowerBound = (lowerBound, upperBound) => {\n    if(parseInt(lowerBound) > parseInt(upperBound)){\n        return 'Upper bound must be greater than or equal to lower bound';\n    }\n    return null;\n}\n\nexport const checkForErrors = (values) => {\n    const {name, generateChildren, lowerBound, upperBound, numChildren} = values;\n    var errorObj = {};\n    errorObj.name = requiredField(name);\n    if(generateChildren){\n        errorObj.lowerBound = requiredField(lowerBound) || positiveInteger(lowerBound);\n        errorObj.upperBound = requiredField(upperBound) || positiveInteger(upperBound) || greaterThanLowerBound(lowerBound, upperBound);\n        errorObj.numChildren = requiredField(numChildren);\n    }\n    else{\n        errorObj.lowerBound = null;\n        errorObj.upperBound = null;\n        errorObj.numChildren = null;    \n    }\n    return errorObj;\n}\nexport const checkForChildrenErrors = (values) => {\n    const {lowerBound, upperBound, numChildren} = values;\n    var errorObj = {};\n    errorObj.lowerBound = requiredField(lowerBound) || positiveInteger(lowerBound);\n    errorObj.upperBound = requiredField(upperBound) || positiveInteger(upperBound) || greaterThanLowerBound(lowerBound, upperBound);\n    errorObj.numChildren = requiredField(numChildren);\n    return errorObj;\n}","import axios from 'axios';\nimport {checkForErrors} from './formValidationFunctions';\n\nexport const resetFormValues = function(){\n    this.setState({\n        name: '', \n        lowerBound: '', \n        upperBound: '', \n        numChildren: '', \n        generateChildren: false, \n        submitting: false, \n        hasFormError: false\n    });\n}\nexport const getFormValues = function(){\n    const {name, generateChildren, lowerBound, upperBound, numChildren} = this.state;\n    return {name, generateChildren, lowerBound, upperBound, numChildren};\n}\nexport const handleCheckBoxClick = function(){\n    this.setState({generateChildren: !this.state.generateChildren})\n}\nexport const handleInputChange = function(event){\n    const {value, name} = event.target;\n    //If there is an error, check to see if the error status has changed whenever the user modifies a form input\n    //Otherwise, just set the value\n    if(this.state.hasFormError){\n        this.setState({[name]: value}, function(){\n            this.setState({formErrors: checkForErrors(this.getFormValues())});\n        })\n    }\n    else{\n        this.setState({[name]: value});\n    }\n}\nexport const handleSubmit = function(event){\n    event.preventDefault();\n    this.setState({submitting: true});\n    const values = this.getFormValues();\n    const formErrors = checkForErrors(values);\n    var hasFormError = false;\n    Object.keys(formErrors).forEach(val => {\n        if(formErrors[val]){\n            hasFormError = true;\n        }\n    })\n    if(hasFormError){\n        this.setState({formErrors, submitting: false, hasFormError: true});\n    }\n    else{\n        this.setState({formErrors});\n        axios.post('/api/create-factory', values)\n        .then( ({status}) => {\n            if(status===201){\n                this.createFlash('flash-msg success', 'Factory Created!');\n                this.resetFormValues();\n            }\n            else{\n                throw Error('Bad request');\n            }\n        })\n        .catch( err => {\n            console.log(err);\n            this.resetFormValues();\n            this.createFlash('flash-msg error', 'An error occurred - try again later');\n        })\n    }\n}","\nconst timeDown = (a,b) => {\n    if (a.createdAt > b.createdAt){\n        return -1;\n    }\n    else if (a.createdAt < b.createdAt){\n        return 1;\n    }\n    return 0;\n}\nconst timeUp = (a,b) => {\n    if (a.createdAt < b.createdAt){\n        return -1;\n    }\n    else if (a.createdAt > b.createdAt){\n        return 1;\n    }\n    return 0;\n}\nconst alphaDown = (a,b) => {\n    if (a.name < b.name){\n        return -1;\n    }\n    else if (a.name > b.name){\n        return 1;\n    }\n    return 0;\n}\nconst alphaUp = (a,b) => {\n    if (a.name > b.name){\n        return -1;\n    }\n    else if (a.name < b.name){\n        return 1;\n    }\n    return 0;\n}\nexport const handleFactorySort = function(arr, sortSelection){\n    var factories = [...arr];\n    switch(sortSelection){\n        case 'timeDown':\n            return factories.sort(timeDown);\n        case 'timeUp':\n            return factories.sort(timeUp);\n        case 'alphaDown':\n            return factories.sort(alphaDown);\n        case 'alphaUp':\n            return factories.sort(alphaUp);\n        default:\n            return factories;\n    }\n}","import axios from 'axios';\nimport {handleFactorySort} from './factorySortingFunctions';\nimport {checkForChildrenErrors} from './formValidationFunctions';\n\nexport const handleFactoryToggle = function(index){\n    var factories = [...this.state.factories];\n    factories[index].open = !factories[index].open;\n    this.setState({factories});\n}\nexport const toggleAllFactories = function(option){\n    var factories = [...this.state.factories].map(factory => {\n        factory.open = option;\n        return factory;\n    });\n    this.setState({factories});\n}\nexport const factoryAdded = function(factory){\n    var factories = [...this.state.factories];\n    factories.push(factory);\n    this.setState({factories: handleFactorySort(factories, this.state.sortSelection), showTreeActions: false});\n}\nexport const factoryRemoved = function(id){\n    var factories = [...this.state.factories].filter( factory => factory._id !== id);\n    this.setState({factories, selectedFactory: null})\n}\nexport const factoryUpdated = function(updatedFactory){\n    const {name, lowerBound, upperBound, numChildren, _id} = updatedFactory;\n    const factories = [...this.state.factories].map( factory => {\n        if(factory._id === _id){\n            updatedFactory.open = factory.open;\n            return updatedFactory;\n        }\n        return factory;\n    });\n    //Only update selected factory if a user is currently editing that factory\n    var selectedFactory = this.state.selectedFactory;\n    if(selectedFactory && selectedFactory._id === _id){\n        selectedFactory = updatedFactory;\n    }\n    this.setState({\n        factories: handleFactorySort(factories, this.state.sortSelection), \n        selectedFactory, \n        name, \n        lowerBound, \n        upperBound, \n        numChildren\n    });\n}\nexport const handleFactorySelection = function(selectedFactory){\n    const {name, lowerBound, upperBound, numChildren} = selectedFactory;\n    this.setState({\n        selectedFactory, \n        editName: name, \n        //Since 0 is a 'falsey' value, first check if it's 0 and then set to an empty string if it's not a legit value\n        editLowerBound: lowerBound === 0 ? 0 : lowerBound || '', \n        editUpperBound: upperBound === 0 ? 0 : upperBound || '',  \n        editNumChildren: numChildren === 0 ? 0 : numChildren || '', \n        formErrors: {lowerBound: null, upperBound: null, numChildren: null}\n    });\n}\nexport const handleEditCancel = function(){\n    this.setState({selectedFactory: null});\n}\nexport const handleInputChange = function(event){\n    const {value, name} = event.target;\n    //If there is an error with only the children props, check to see if the error status has changed whenever the user modifies a form input\n    //Otherwise, just set the value\n    if(name!=='name' && this.state.hasFormError){\n        this.setState({[name]: value}, function(){\n            this.setState({formErrors: checkForChildrenErrors(this.getFormValues())});\n        })\n    }\n    else{\n        this.setState({[name]: value});\n    }\n}\nexport const getFormValues = function(type){\n    if(type==='name'){\n        return {name: this.state.editName};\n    }\n    const {editLowerBound, editUpperBound, editNumChildren} = this.state;\n    return {lowerBound: editLowerBound, upperBound: editUpperBound, numChildren: editNumChildren};\n}\nexport const createFlash = function(className, message){\n    this.setState({flashMsg: {className, message}}, function(){\n        setTimeout(() =>{\n            this.setState({flashMsg: null});\n        }, 3000);\n    });\n}\nexport const handleSubmit = function(type, event){\n    event.preventDefault();\n    const submitUpdate = type => {\n        axios.put(`/api/update-factory/${this.state.selectedFactory._id}/${type}`, this.getFormValues(type))\n        .then(({status}) => {\n            if(status === 200){\n                this.createFlash('flash-msg success', 'Update Successful!')\n            }\n            else{\n                throw Error('Bad request');\n            }\n        })\n        .catch( err => {\n            console.log(err);\n            this.createFlash('flash-msg error', 'An error occurred - try again later.');\n        });\n    }\n    if(type==='children'){\n        const values = this.getFormValues();\n        const formErrors = checkForChildrenErrors(values);\n        var hasFormError = false;\n        Object.keys(formErrors).forEach(val => {\n            if(formErrors[val]){\n                hasFormError = true;\n            }\n        })\n        if(hasFormError){\n            this.setState({formErrors, hasFormError: true});\n        }\n        else{\n            this.setState({formErrors: {lowerBound: null, upperBound: null, numChildren: null}, hasFormError: false});\n            submitUpdate(type);\n        }\n    }\n    else{\n        submitUpdate(type);\n    }\n}\nexport const handleSortSelection = function({target: {value}}){\n    this.setState({\n        sortSelection: value, \n        factories: handleFactorySort(this.state.factories, value)\n    });\n}\nexport const handleFilterInput = function(event){\n    this.setState({\n        filterInput: event.target.value\n    });\n}\nexport const handleFilterClear = function(){\n    this.setState({filterInput: ''});\n}\nexport const closeTreeActions = function(){\n    this.setState({showTreeActions: false})\n}\nexport const openTreeActions = function(){\n    this.setState({showTreeActions: true})\n}","import React, {Component, Fragment} from 'react';\nimport FormInput from './FormInput';\nimport FormSelect from './FormSelect';\nimport FormSortFilter from './FormSortFilter';\nimport Icon from './Icon';\nimport {handleCheckBoxClick, handleInputChange, handleSubmit, getFormValues, resetFormValues} from '../utils/treeActionFunctions';\nimport {createFlash} from '../utils/appFunctions';\n\nclass FormTreeActions extends Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            name: '',\n            lowerBound: '',\n            upperBound: '',\n            numChildren: '',\n            generateChildren: false,\n            submitting: false,\n            hasFormError: false,\n            formErrors: {\n                name: null,\n                lowerBound: null,\n                upperBound: null,\n                numChildren: null\n            },\n            flashMsg: null\n        };\n\n        this.handleCheckBoxClick = handleCheckBoxClick.bind(this);\n        this.handleInputChange = handleInputChange.bind(this);\n        this.handleSubmit = handleSubmit.bind(this);\n        this.getFormValues = getFormValues.bind(this);\n        this.resetFormValues = resetFormValues.bind(this);\n        this.createFlash = createFlash.bind(this);\n    }\n    render(){\n        const {sortSelection, handleSortSelection, filterInput, handleFilterInput, handleFilterClear, toggleAllFactories} = this.props;\n        return(\n            <Fragment>\n                {this.state.flashMsg && <div className={this.state.flashMsg.className}>{this.state.flashMsg.message}</div>}\n                <h5>CREATE A NEW FACTORY</h5>\n                <section>               \n                    <form onSubmit={this.handleSubmit}>\n                        <FormInput\n                            type='text'\n                            name='name'\n                            label='Name:'\n                            placeholder='Enter a factory name'\n                            value={this.state.name}\n                            handleInputChange={this.handleInputChange}\n                            error={this.state.formErrors.name}\n                        />\n                        <div style={{paddingBottom: 10}}>\n                            <div className={`checkbox${this.state.generateChildren ? ' active' : ''}`} onClick={() => this.handleCheckBoxClick()}>\n                                <Icon icon='check' style={{width: 12, height: 12}}/>\n                            </div>\n                            <span style={{fontSize: 14}}>Generate Children?</span>\n                        </div>\n                        <div style={{borderTop: '1px solid #ddd', display: this.state.generateChildren ? 'block' : 'none'}}>\n                            <FormInput\n                                type='number'\n                                name='lowerBound'\n                                label='Lower Bound:'\n                                placeholder='Enter a positive integer'\n                                value={this.state.lowerBound}\n                                handleInputChange={this.handleInputChange}\n                                error={this.state.formErrors.lowerBound}\n                            />\n                            <FormInput\n                                type='number'\n                                name='upperBound'\n                                label='Upper Bound:'\n                                placeholder='Enter a positive integer'\n                                value={this.state.upperBound}\n                                handleInputChange={this.handleInputChange}\n                                error={this.state.formErrors.upperBound}\n                            />\n                            <FormSelect\n                                name='numChildren'\n                                value={this.state.numChildren}\n                                handleInputChange={this.handleInputChange}\n                                error={this.state.formErrors.numChildren}\n                            />\n                        </div>\n                        <div className='text-right form-group'>\n                            <button disabled={this.state.submitting} className={`btn btn-green${this.state.submitting ? ' disabled' : ''}`}>CREATE FACTORY</button>\n                        </div>\n                    </form>\n                </section>\n                <FormSortFilter\n                    sortSelection={sortSelection}\n                    handleSortSelection={handleSortSelection}\n                    filterInput={filterInput}\n                    handleFilterInput={handleFilterInput}\n                    handleFilterClear={handleFilterClear}\n                    toggleAllFactories={toggleAllFactories}\n                />\n            </Fragment>\n        )\n    }\n}\n\nexport default FormTreeActions;","import React from 'react';\nimport FormTreeActions from './FormTreeActions';\nimport Icon from './Icon';\n\nconst TreeActions = ({sortSelection, handleSortSelection, filterInput, handleFilterInput, handleFilterClear, closeTreeActions, toggleAllFactories, flashMsg}) =>{\n    return(\n        <div className='main-col tree-actions'>\n            <div className='column-container'>\n                <header className='h-1'>\n                    <button type='button' className='close-tree-actions-btn' title='Close Tree Actions' onClick={() => closeTreeActions() }>\n                        <Icon icon='times' style={{width: 16, height: 25.59}} />\n                    </button>\n                    <span>TREE ACTIONS</span>\n                </header>\n                <FormTreeActions \n                    sortSelection={sortSelection}\n                    handleSortSelection={handleSortSelection}\n                    filterInput={filterInput}\n                    handleFilterInput={handleFilterInput}\n                    handleFilterClear={handleFilterClear}\n                    toggleAllFactories={toggleAllFactories}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default TreeActions;","import React from 'react';\n\nconst LoadingTrees = ({msg, style}) => {\n    const tree = <svg style={{width: 40}} aria-hidden=\"true\" focusable=\"false\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path fill=\"currentColor\" d=\"M378.31 378.49L298.42 288h30.63c9.01 0 16.98-5 20.78-13.06 3.8-8.04 2.55-17.26-3.28-24.05L268.42 160h28.89c9.1 0 17.3-5.35 20.86-13.61 3.52-8.13 1.86-17.59-4.24-24.08L203.66 4.83c-6.03-6.45-17.28-6.45-23.32 0L70.06 122.31c-6.1 6.49-7.75 15.95-4.24 24.08C69.38 154.65 77.59 160 86.69 160h28.89l-78.14 90.91c-5.81 6.78-7.06 15.99-3.27 24.04C37.97 283 45.93 288 54.95 288h30.63L5.69 378.49c-6 6.79-7.36 16.09-3.56 24.26 3.75 8.05 12 13.25 21.01 13.25H160v24.45l-30.29 48.4c-5.32 10.64 2.42 23.16 14.31 23.16h95.96c11.89 0 19.63-12.52 14.31-23.16L224 440.45V416h136.86c9.01 0 17.26-5.2 21.01-13.25 3.8-8.17 2.44-17.47-3.56-24.26z\"></path></svg>;\n    return(\n        <div className='loading-container p-10 text-center'>\n            <div>{tree}</div>\n            <div>{tree}</div>\n            <div>{tree}</div>\n            <p style={{marginTop: 10, color: '#555'}}>Loading...</p>\n        </div>\n    )\n}\nexport default LoadingTrees;","import React, {Fragment} from 'react';\nimport Icon from './Icon';\n\nconst Factory = ({factory, selected, index, handleFactorySelection, handleFactoryToggle}) =>{\n    const {_id, name, lowerBound, upperBound, numChildren, children, open} = factory;\n    const renderChildrenContent = () => {\n        if(children && children.length > 0){\n            return (\n                <Fragment>\n                    <div className='children-info'>\n                        <span>Children: <strong>{numChildren}</strong></span>\n                        <span>Lower Bound: <strong>{lowerBound}</strong></span>\n                        <span>Upper Bound: <strong>{upperBound}</strong></span>\n                    </div>\n                    <ul>\n                        {children.map((child, i)=> {\n                            return <li key={`${_id}-child-${i}`}><Icon icon='angle' /> {child}</li>\n                        })}\n                    </ul>\n                </Fragment>\n            )\n        }\n        return(\n            <div className='no-content'>No children to show</div>\n        )\n    }\n    return(\n        <div className={`factory-container${open ? ' open': ''}${selected ? ' selected': ''}`}>\n            <div className='factory-header'>\n                <div className='header-info' onClick={() => handleFactoryToggle(index)}>\n                    <span className='angle'><Icon icon='angle' /></span>\n                    <span className='factory-name'>{name}</span>\n                </div>\n                <button onClick={() => handleFactorySelection(factory)} className='edit-btn' title='Edit this factory'>\n                    <Icon icon='pencil' />\n                </button>\n            </div>\n            <div className='factory-children-container'>{renderChildrenContent()}</div>\n        </div>\n    )\n}\n\nexport default Factory;","import React, {Component, Fragment} from 'react';\nimport LoadingTrees from './LoadingTrees';\nimport Factory from './Factory';\nimport Icon from './Icon';\n\nclass TreeRoot extends Component{\n    state = {\n        open: true\n    }\n    handleHeaderClick = () => {\n        this.setState({open: !this.state.open});\n    }\n    renderContent = () =>{\n        if(this.props.dataLoadingError){\n            return <p className='p-10 text-center'>An error occurred. Please try again later.</p>\n        }\n        else if (this.props.factories){\n            return (\n                    <Fragment>\n                        <div className='root'>\n                            <div className='header-info' onClick={() => this.handleHeaderClick()}>\n                                <span className='angle'><Icon icon='angle' /></span>\n                                <span>ROOT</span>\n                            </div>\n                        </div>\n                        <div className='all-factories'>{this.renderFactories()}</div>\n                    </Fragment>\n            )\n        }\n        return <LoadingTrees />\n    }\n    renderFactories = () =>{\n        var {selectedFactory, factories, filterInput} = this.props;\n        if(filterInput){\n            const re = new RegExp(filterInput, \"i\");\n            factories = factories.filter(factory => re.test(factory.name));\n        }\n        return(\n            factories.map( (factory, index) =>{\n                return <Factory \n                            key={factory._id}\n                            factory={factory}\n                            index={index}\n                            selected={selectedFactory && selectedFactory._id === factory._id} \n                            handleFactorySelection={this.props.handleFactorySelection}\n                            handleFactoryToggle={this.props.handleFactoryToggle}\n                        />\n            })\n        )\n    }\n    render(){\n        return(\n            <div className='main-col tree'>\n                <div className={`column-container tree-container${this.state.open ? ' open' : ''}`}>\n                    <header className='h-2'>\n                        <button className='menu-btn' title='Open Tree Actions' onClick={() => this.props.openTreeActions()}>\n                            <span/><span/><span/>\n                        </button>\n                        <span>TREE</span>\n                    </header>\n                    {this.renderContent()}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TreeRoot;","import React, {Fragment} from 'react';\nimport FormInput from './FormInput';\n\nconst FormFactoryName = ({handleSubmit, editName, handleInputChange, disabled}) => {\n    return(\n        <Fragment>\n            <h5>EDIT FACTORY NAME</h5>\n            <section>               \n                <form onSubmit={event => handleSubmit('name', event)}>\n                    <FormInput \n                        label='Name:' \n                        placeholder='Enter a factory name' \n                        name='editName' \n                        value={editName}\n                        handleInputChange={handleInputChange}\n                    />\n                    <div className='form-group text-right'>\n                        <button type='submit' disabled={disabled} className={`btn btn-green${disabled ? ' disabled' : ''}`}>UPDATE NAME</button>\n                    </div>\n                </form>\n            </section>\n        </Fragment>\n    )\n}\n\nexport default FormFactoryName;","import React, {Fragment} from 'react';\nimport FormInput from './FormInput';\nimport FormSelect from './FormSelect';\n\nconst FormFactoryChildren = ({handleSubmit, handleInputChange, editLowerBound, editUpperBound, editNumChildren, disabled, formErrors}) => {\n    return(\n        <Fragment>\n            <h5>EDIT FACTORY CHILDREN</h5>\n            <section>               \n                <form onSubmit={event => handleSubmit('children', event)}>\n                    <FormInput \n                        type='number'\n                        label='Lower Bound:' \n                        placeholder='Enter a positive integer' \n                        name='editLowerBound' \n                        value={editLowerBound}\n                        handleInputChange={handleInputChange}\n                        error={formErrors.lowerBound}\n                    />\n                    <FormInput \n                        type='number'\n                        label='Upper Bound:' \n                        placeholder='Enter a positive integer' \n                        name='editUpperBound' \n                        value={editUpperBound}\n                        handleInputChange={handleInputChange}\n                        error={formErrors.upperBound}\n                    />\n                    <FormSelect\n                        name='editNumChildren'\n                        value={editNumChildren}\n                        handleInputChange={handleInputChange}\n                        error={formErrors.numChildren}\n                    />\n                    <div className='form-group text-right'>\n                        <button type='submit' disabled={disabled} className={`btn btn-green${disabled ? ' disabled' : ''}`}>UPDATE CHILDREN</button>\n                    </div>\n                </form>\n            </section>\n        </Fragment>\n    )\n}\n\nexport default FormFactoryChildren;","import React from 'react';\nimport axios from 'axios';\nimport FormFactoryName from './FormFactoryName';\nimport FormFactoryChildren from './FormFactoryChildren';\nimport Icon from './Icon';\n\nconst EditFactory = (props) => {\n    const {\n        selectedFactory, \n        handleSubmit, \n        handleInputChange, \n        handleEditCancel, \n        editName, \n        editLowerBound, \n        editUpperBound, \n        editNumChildren, \n        formErrors, \n        flashMsg\n    } = props;\n    const renderContent = () => {\n        return(\n            <div>\n                <div className='selection-container'>\n                    <div><strong>Selected Factory:</strong> {selectedFactory.name}</div>\n                    <button className='btn cancel-selection' onClick={() => handleEditCancel()}>\n                        <Icon icon='times' style={{width: 14, height: 22.39}} />\n                    </button>\n                </div>\n                <FormFactoryName \n                    editName={editName}\n                    handleSubmit={handleSubmit}\n                    handleInputChange={handleInputChange}\n                    disabled={!editName || selectedFactory.name === editName}\n                />\n                <FormFactoryChildren\n                    editLowerBound={editLowerBound}\n                    editUpperBound={editUpperBound}\n                    editNumChildren={editNumChildren}\n                    disabled={areChildrenDisabled()}\n                    handleSubmit={handleSubmit}\n                    handleInputChange={handleInputChange}\n                    formErrors={formErrors}\n                />\n                <div className='btn-container'>\n                    <button className='btn btn-yellow' onClick={() => handleDelete(selectedFactory._id)}>\n                        <Icon icon='trash' style={{width: 14, height: 16, verticalAlign: 'text-bottom', marginRight: 5}} /> \n                        <span>DELETE FACTORY</span>\n                    </button>\n                </div>\n            </div>\n        )\n    }\n    const handleDelete = id => {\n        const response = window.confirm(\"Deleting a factory cannot be undone. Continue?\");\n        if(response){\n            axios.delete(`/api/delete-factory/${id}`);\n        }\n    }\n    const areChildrenDisabled = () => {\n        const {lowerBound, upperBound, numChildren} = props.selectedFactory;\n        //Ignore type when checking value equality\n        // eslint-disable-next-line\n        return lowerBound == editLowerBound && upperBound == editUpperBound && numChildren == editNumChildren;\n    }\n    return(\n        <div className='main-col edit-factory'>\n            <div className='column-container'>\n                <header className='h-3'>EDIT FACTORY</header>\n                {flashMsg && <div className={flashMsg.className}>{flashMsg.message}</div>}\n                {selectedFactory && renderContent()}\n            </div>\n        </div>\n    )\n}\n\nexport default EditFactory;","import React, {Component} from 'react';\nimport axios from 'axios';\nimport socketIOClient from \"socket.io-client\";\nimport {HOST_URI} from '../config/keys';\nimport TreeActions from './TreeActions';\nimport Tree from './Tree';\nimport EditFactory from './EditFactory';\nimport {\n  handleSortSelection,\n  handleFilterInput,\n  handleFilterClear,\n  closeTreeActions,\n  toggleAllFactories,\n  handleFactorySelection,\n  openTreeActions,\n  handleFactoryToggle,\n  handleSubmit,\n  handleInputChange,\n  handleEditCancel,\n  getFormValues,\n  factoryAdded,\n  factoryUpdated,\n  factoryRemoved,\n  createFlash\n} from '../utils/appFunctions';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      factories: null,\n      selectedFactory: null,\n      sortSelection: 'timeDown',\n      filterInput: '',\n      editName: '',\n      editLowerBound: '',\n      editUpperBound: '',\n      editNumChildren: '',\n      dataLoadingError: false,\n      hasFormError: false,\n      formErrors: {\n        lowerBound: null,\n        upperBound: null,\n        numChildren: null\n      },\n      showTreeActions: false,\n      flashMsg: null\n    }\n\n    this.handleSortSelection = handleSortSelection.bind(this);\n    this.handleFilterInput = handleFilterInput.bind(this);\n    this.handleFilterClear = handleFilterClear.bind(this);\n    this.closeTreeActions = closeTreeActions.bind(this);\n    this.toggleAllFactories = toggleAllFactories.bind(this);\n    this.handleFactorySelection = handleFactorySelection.bind(this);\n    this.openTreeActions = openTreeActions.bind(this);\n    this.handleFactoryToggle= handleFactoryToggle.bind(this);\n    this.handleSubmit = handleSubmit.bind(this);\n    this.handleInputChange = handleInputChange.bind(this);\n    this.handleEditCancel = handleEditCancel.bind(this);\n    this.getFormValues = getFormValues.bind(this);\n    this.factoryAdded = factoryAdded.bind(this);\n    this.factoryUpdated = factoryUpdated.bind(this);\n    this.factoryRemoved = factoryRemoved.bind(this);\n    this.createFlash = createFlash.bind(this);\n  }\n  componentDidMount(){\n    axios.get('/api/all-factories')\n    .then( ({data, status}) => {\n        if(status === 200){\n            this.setState({\n              factories: data.map(factory => {\n                //Set all factories to be expanded (not collapsed in the tree view)\n                factory.open = true;\n                return factory;\n              })\n            });\n        }\n        else{\n            this.setState({dataLoadingError: true});\n        }\n    })\n    .catch( () => {\n        this.setState({dataLoadingError: true})\n    });\n    const socket = socketIOClient(HOST_URI);\n    socket.on(\"factoryAdded\", data => this.factoryAdded(data));\n    socket.on(\"factoryRemoved\", data => this.factoryRemoved(data));\n    socket.on(\"factoryUpdated\", data => this.factoryUpdated(data));\n  }\n  render() {\n    return (\n        <div className={`main-container${this.state.selectedFactory ? ' editing' : ''}${this.state.showTreeActions ? ' show-tree-actions' : ''}`}>\n          <TreeActions \n            sortSelection={this.state.sortSelection}\n            handleSortSelection={this.handleSortSelection}\n            filterInput={this.state.filterInput}\n            handleFilterInput={this.handleFilterInput}\n            handleFilterClear={this.handleFilterClear}\n            closeTreeActions={this.closeTreeActions}\n            toggleAllFactories={this.toggleAllFactories}\n          />\n          <Tree \n            handleFactorySelection={this.handleFactorySelection} \n            factories={this.state.factories}\n            selectedFactory={this.state.selectedFactory}\n            dataLoadingError={this.state.dataLoadingError}\n            filterInput={this.state.filterInput}\n            openTreeActions={this.openTreeActions}\n            handleFactoryToggle={this.handleFactoryToggle}\n          />\n          <EditFactory \n              selectedFactory={this.state.selectedFactory}\n              handleSubmit={this.handleSubmit}\n              handleInputChange={this.handleInputChange}\n              handleEditCancel={this.handleEditCancel}\n              editName={this.state.editName}\n              editLowerBound={this.state.editLowerBound}\n              editUpperBound={this.state.editUpperBound}\n              editNumChildren={this.state.editNumChildren}\n              formErrors={this.state.formErrors}\n              flashMsg={this.state.flashMsg}\n            />\n            <div className='edit-overlay' onClick={() => this.handleEditCancel()}></div>\n            <div className='tree-actions-overlay' onClick={() => this.closeTreeActions()}></div>\n        </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './stylesheets/index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}