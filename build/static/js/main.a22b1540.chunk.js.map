{"version":3,"sources":["config/keys.js","config/prodKeys.js","components/FormInput.js","components/FormSelect.js","components/Icon.js","components/FormSortFilter.js","utils/index.js","components/FormTreeActions.js","components/TreeActions.js","components/LoadingTrees.js","components/Factory.js","components/Tree.js","components/FormFactoryName.js","components/FormFactoryChildren.js","components/EditFactory.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","require","MONGO_URI","process","HOST_URI","FormInput","_ref","label","type","name","placeholder","value","handleInputChange","error","react_default","a","createElement","className","min","concat","onChange","FormSelect","arr","disabled","key","i","push","renderOptions","vectors","times","path","viewBox","plus","pencil","trash","angle","search","check","subtract","Icon","icon","style","aria-hidden","role","xmlns","d","FormSortFilter","state","focused","_this2","this","_this$props","props","sortSelection","handleSortSelection","filterInput","handleFilterInput","handleFilterClear","react","onFocus","setState","onBlur","onClick","components_Icon","width","margin","Component","requiredField","input","positiveInteger","test","parseInt","greaterThanLowerBound","lowerBound","upperBound","timeDown","b","createdAt","timeUp","alphaDown","alphaUp","handleFactorySort","factories","Object","toConsumableArray","sort","checkForErrors","values","generateChildren","numChildren","errorObj","checkForChildrenErrors","FormTreeActions","submitting","hasFormError","formErrors","handleCheckBoxClick","_this","event","_event$target","target","defineProperty","getFormValues","_this$state","resetFormValues","handleSubmit","preventDefault","keys","forEach","val","axios","post","then","status","Error","catch","err","console","log","sortToggle","handleSortToggle","onSubmit","components_FormInput","paddingBottom","height","fontSize","borderTop","display","components_FormSelect","components_FormSortFilter","TreeActions","closeTreeActions","title","components_FormTreeActions","LoadingTrees","msg","tree","focusable","fill","marginTop","color","Factory","open","handleEditClick","handleFactorySelection","factory","handleHeaderClick","renderChildrenContent","_this$props$factory","_id","children","length","map","child","selected","TreeRoot","renderContent","dataLoadingError","renderFactories","components_LoadingTrees","selectedFactory","re","RegExp","filter","components_Factory","openTreeActions","FormFactoryName","editName","FormFactoryChildren","editLowerBound","editUpperBound","editNumChildren","EditFactory","handleCancel","components_FormFactoryName","components_FormFactoryChildren","isDisabled","handleDelete","verticalAlign","marginRight","id","window","confirm","delete","_this$props2","_this$props2$selected","App","showTreeActions","factoryAdded","factoryRemoved","factoryUpdated","updatedFactory","put","get","_ref2","data","socket","socketIOClient","on","components_TreeActions","Tree","components_EditFactory","Boolean","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a22b1540.chunk.js","sourcesContent":["if (process.env.NODE_ENV === 'production'){\n    module.exports = require('./prodKeys');\n}\nelse {\n   module.exports = require('./devKeys');\n}\n","module.exports = {\n    MONGO_URI: process.env.MONGO_URI,\n    HOST_URI: process.env.HOST_URI\n}","import React from 'react';\n\nconst FormInput = ({label, type, name, placeholder, value, handleInputChange, error}) => {\n    return(\n        <div className='form-group'>\n            <label>{label}</label>\n            <input \n                min={type==='number' ? '0': ''}\n                type={type} \n                name={name}\n                className={`form-input${error ? ' input-error' : ''}`} \n                placeholder={placeholder}\n                value={value}\n                onChange={handleInputChange}\n            />\n            {error && <div className='error-msg'>{error}</div>}\n        </div>\n    )\n}\n\nexport default FormInput;","import React from 'react';\n\nconst CHILD_LIMIT = 15;\nconst renderOptions = () => {\n    var arr = [<option value='' disabled key='opt-init'>Select an option</option>];\n    for(let i = 0; i <= CHILD_LIMIT; i++){\n        arr.push(<option key={`opt-${i}`} value={i}>{i}</option>);\n    }\n    return arr;\n}\n\nconst FormSelect = ({placeholder, value, handleInputChange, name, error}) => {\n    return(\n        <div className='form-group'>\n            <label>Number of Children:</label>\n            <select value={value} onChange={handleInputChange} name={name} className={`form-input${error ? ' input-error' : ''}`} >\n                {renderOptions()}\n            </select>\n            {error && <div className='error-msg'>{error}</div>}\n        </div>\n    )\n}\n\nexport default FormSelect;","import React from 'react';\n\nconst vectors = {\n    times: {\n        path: 'M207.6 256l107.72-107.72c6.23-6.23 6.23-16.34 0-22.58l-25.03-25.03c-6.23-6.23-16.34-6.23-22.58 0L160 208.4 52.28 100.68c-6.23-6.23-16.34-6.23-22.58 0L4.68 125.7c-6.23 6.23-6.23 16.34 0 22.58L112.4 256 4.68 363.72c-6.23 6.23-6.23 16.34 0 22.58l25.03 25.03c6.23 6.23 16.34 6.23 22.58 0L160 303.6l107.72 107.72c6.23 6.23 16.34 6.23 22.58 0l25.03-25.03c6.23-6.23 6.23-16.34 0-22.58L207.6 256z',\n        viewBox: '0 0 320 512'\n    },\n    plus: {\n        path: 'M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z',\n        viewBox: '0 0 448 512'\n    },\n    pencil: {\n        path: 'M402.6 83.2l90.2 90.2c3.8 3.8 3.8 10 0 13.8L274.4 405.6l-92.8 10.3c-12.4 1.4-22.9-9.1-21.5-21.5l10.3-92.8L388.8 83.2c3.8-3.8 10-3.8 13.8 0zm162-22.9l-48.8-48.8c-15.2-15.2-39.9-15.2-55.2 0l-35.4 35.4c-3.8 3.8-3.8 10 0 13.8l90.2 90.2c3.8 3.8 10 3.8 13.8 0l35.4-35.4c15.2-15.3 15.2-40 0-55.2zM384 346.2V448H64V128h229.8c3.2 0 6.2-1.3 8.5-3.5l40-40c7.6-7.6 2.2-20.5-8.5-20.5H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V306.2c0-10.7-12.9-16-20.5-8.5l-40 40c-2.2 2.3-3.5 5.3-3.5 8.5z',\n        viewBox: '0 0 576 512'\n    },\n    trash: {\n        path: 'M296 432h16a8 8 0 0 0 8-8V152a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v272a8 8 0 0 0 8 8zm-160 0h16a8 8 0 0 0 8-8V152a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v272a8 8 0 0 0 8 8zM440 64H336l-33.6-44.8A48 48 0 0 0 264 0h-80a48 48 0 0 0-38.4 19.2L112 64H8a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h24v368a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V96h24a8 8 0 0 0 8-8V72a8 8 0 0 0-8-8zM171.2 38.4A16.1 16.1 0 0 1 184 32h80a16.1 16.1 0 0 1 12.8 6.4L296 64H152zM384 464a16 16 0 0 1-16 16H80a16 16 0 0 1-16-16V96h320zm-168-32h16a8 8 0 0 0 8-8V152a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v272a8 8 0 0 0 8 8z',\n        viewBox: '0 0 448 512'\n    },\n    angle: {\n        path: 'M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z',\n        viewBox: '0 0 256 512'\n    },\n    search: {\n        path: 'M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z',\n        viewBox: '0 0 512 512'\n    },\n    check: {\n        path: 'M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z',\n        viewBox: '0 0 512 512'\n    },\n    subtract: {\n        path: 'M416 208H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z',\n        viewBox: '0 0 448 512'\n    }\n};\n\nconst Icon = ({icon, style}) =>{\n    return(\n        <svg aria-hidden=\"true\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox={vectors[icon].viewBox} style={style}><path d={vectors[icon].path}></path></svg>\n    )\n}\n\nexport default Icon;","import React,{Component, Fragment} from 'react';\nimport Icon from './Icon';\n\nclass FormSortFilter extends Component{\n    state = {\n        focused: false\n    }\n    render(){\n        const {sortSelection, handleSortSelection, filterInput, handleFilterInput, handleFilterClear} = this.props;\n        return(\n            <Fragment>\n                <h5>FILTER AND SORT FACTORIES</h5>\n                <section>\n                    <div className='form-group'>\n                        <label>Filter Factories:</label>\n                        <input \n                            className='form-input search' \n                            placeholder='Type to filter by name' \n                            onChange={handleFilterInput}\n                            value={filterInput}\n                            onFocus={() => this.setState({focused: true})}\n                            onBlur={() => this.setState({focused: false})}\n                        />\n                        <button className={`input-btn right${this.state.focused ? ' search-focus': ''}`} onClick={() => handleFilterClear()}>\n                            {filterInput ? <Icon icon='times' style={{width: 14, margin: '0 1px'}}/> : <Icon icon='search' style={{width: 16}} />}\n                        </button>\n                    </div>\n                    <div className='form-group'>\n                        <label>Sort Factories By:</label>\n                        <select value={sortSelection} className='form-input' onChange={handleSortSelection}>\n                            <option value='timeDown'>Create Date (Descending)</option>\n                            <option value='timeUp'>Create Date (Descending)</option>\n                            <option value='alphaDown'>Factory Name (Descending)</option>\n                            <option value='alphaUp'>Factory Name (Ascending)</option>\n                        </select>\n                    </div>\n                </section>\n            </Fragment>\n        )\n    }\n}\n\nexport default FormSortFilter;","const requiredField = input => {\n    if(!input && (input !== 0)){\n        return 'This is a required field';\n    }\n    return null;\n}\nconst positiveInteger = input => {\n    if(/^\\d+$/.test(input) && parseInt(input) >= 0){\n        return null;\n    }\n    return 'Please enter a positive integer';\n}\nconst greaterThanLowerBound = (lowerBound, upperBound) => {\n    if(parseInt(lowerBound) > parseInt(upperBound)){\n        return 'Upper bound must be greater than or equal to lower bound';\n    }\n    return null;\n}\nconst timeDown = (a,b) => {\n    if (a.createdAt > b.createdAt){\n        return -1;\n    }\n    else if (a.createdAt < b.createdAt){\n        return 1;\n    }\n    return 0;\n}\nconst timeUp = (a,b) => {\n    if (a.createdAt < b.createdAt){\n        return -1;\n    }\n    else if (a.createdAt > b.createdAt){\n        return 1;\n    }\n    return 0;\n}\nconst alphaDown = (a,b) => {\n    if (a.name < b.name){\n        return -1;\n    }\n    else if (a.name > b.name){\n        return 1;\n    }\n    return 0;\n}\nconst alphaUp = (a,b) => {\n    if (a.name > b.name){\n        return -1;\n    }\n    else if (a.name < b.name){\n        return 1;\n    }\n    return 0;\n}\n\nexport const handleFactorySort = function(arr, sortSelection){\n    var factories = [...arr];\n    switch(sortSelection){\n        case 'timeDown':\n            return factories.sort(timeDown);\n        case 'timeUp':\n            return factories.sort(timeUp);\n        case 'alphaDown':\n            return factories.sort(alphaDown);\n        case 'alphaUp':\n            return factories.sort(alphaUp);\n        default:\n            return factories;\n    }\n}\n\nexport const checkForErrors = (values) => {\n    const {name, generateChildren, lowerBound, upperBound, numChildren} = values;\n    var errorObj = {};\n    errorObj.name = requiredField(name);\n    if(generateChildren){\n        errorObj.lowerBound = requiredField(lowerBound) || positiveInteger(lowerBound);\n        errorObj.upperBound = requiredField(upperBound) || positiveInteger(upperBound) || greaterThanLowerBound(lowerBound, upperBound);\n        errorObj.numChildren = requiredField(numChildren);\n    }\n    else{\n        errorObj.lowerBound = null;\n        errorObj.upperBound = null;\n        errorObj.numChildren = null;    \n    }\n    return errorObj;\n}\nexport const checkForChildrenErrors = (values) => {\n    const {lowerBound, upperBound, numChildren} = values;\n    var errorObj = {};\n    errorObj.lowerBound = requiredField(lowerBound) || positiveInteger(lowerBound);\n    errorObj.upperBound = requiredField(upperBound) || positiveInteger(upperBound) || greaterThanLowerBound(lowerBound, upperBound);\n    errorObj.numChildren = requiredField(numChildren);\n    return errorObj;\n}","import React, {Component, Fragment} from 'react';\nimport axios from 'axios';\nimport FormInput from './FormInput';\nimport FormSelect from './FormSelect';\nimport FormSortFilter from './FormSortFilter';\nimport Icon from './Icon';\nimport {checkForErrors} from '../utils';\n\nclass FormTreeActions extends Component{\n    state = {\n        name: '',\n        lowerBound: '',\n        upperBound: '',\n        numChildren: '',\n        generateChildren: false,\n        submitting: false,\n        hasFormError: false,\n        formErrors: {\n            name: null,\n            lowerBound: null,\n            upperBound: null,\n            numChildren: null\n        }\n    }\n    handleCheckBoxClick = () => {\n        this.setState({generateChildren: !this.state.generateChildren})\n    }\n    handleInputChange = event => {\n        const {value, name} = event.target;\n        //If there is an error, check to see if the error status has changed whenever the user modifies a form input\n        //Otherwise, just set the value\n        if(this.state.hasFormError){\n            this.setState({[name]: value}, () => {\n                this.setState({formErrors: checkForErrors(this.getFormValues())});\n            })\n        }\n        else{\n            this.setState({[name]: value});\n        }\n    }\n    getFormValues = () => {\n        const {name, generateChildren, lowerBound, upperBound, numChildren} = this.state;\n        return {name, generateChildren, lowerBound, upperBound, numChildren};\n    }\n    resetFormValues = () => {\n        this.setState({\n            name: '', \n            lowerBound: '', \n            upperBound: '', \n            numChildren: '', \n            generateChildren: false, \n            submitting: false, \n            hasFormError: false\n        });\n    }\n    handleSubmit = event => {\n        event.preventDefault();\n        this.setState({submitting: true});\n        const values = this.getFormValues();\n        const formErrors = checkForErrors(values);\n        var hasFormError = false;\n        Object.keys(formErrors).forEach(val => {\n            if(formErrors[val]){\n                hasFormError = true;\n            }\n        })\n        if(hasFormError){\n            this.setState({formErrors, submitting: false, hasFormError: true});\n        }\n        else{\n            this.setState({formErrors});\n            axios.post('/api/create-factory', values)\n            .then( ({status}) => {\n                if(status===201){\n                    this.resetFormValues();\n                }\n                else{\n                    throw Error('Bad request');\n                }\n            })\n            .catch( err => {\n                console.log(err);\n                this.resetFormValues();\n            })\n        }\n    }\n    render(){\n        const {sortToggle, sortSelection, handleSortToggle, handleSortSelection, filterInput, handleFilterInput, handleFilterClear} = this.props;\n        return(\n            <Fragment>\n                <h5>CREATE A NEW FACTORY</h5>\n                <section>               \n                    <form onSubmit={this.handleSubmit}>\n                        <FormInput\n                            type='text'\n                            name='name'\n                            label='Name:'\n                            placeholder='Enter a factory name'\n                            value={this.state.name}\n                            handleInputChange={this.handleInputChange}\n                            error={this.state.formErrors.name}\n                        />\n                        <div style={{paddingBottom: 10}}>\n                            <div className={`checkbox${this.state.generateChildren ? ' active' : ''}`} onClick={() => this.handleCheckBoxClick()}>\n                                <Icon icon='check' style={{width: 12, height: 12}}/>\n                            </div>\n                            <span style={{fontSize: 14}}>Generate Children?</span>\n                        </div>\n                        <div style={{borderTop: '1px solid #ddd', display: this.state.generateChildren ? 'block' : 'none'}}>\n                            <FormInput\n                                type='number'\n                                name='lowerBound'\n                                label='Lower Bound:'\n                                placeholder='Enter a positive integer'\n                                value={this.state.lowerBound}\n                                handleInputChange={this.handleInputChange}\n                                error={this.state.formErrors.lowerBound}\n                            />\n                            <FormInput\n                                type='number'\n                                name='upperBound'\n                                label='Upper Bound:'\n                                placeholder='Enter a positive integer'\n                                value={this.state.upperBound}\n                                handleInputChange={this.handleInputChange}\n                                error={this.state.formErrors.upperBound}\n                            />\n                            <FormSelect\n                                name='numChildren'\n                                value={this.state.numChildren}\n                                handleInputChange={this.handleInputChange}\n                                error={this.state.formErrors.numChildren}\n                            />\n                        </div>\n                        <div className='text-right form-group'>\n                            <button disabled={this.state.submitting} className={`btn btn-green${this.state.submitting ? ' disabled' : ''}`}>CREATE FACTORY</button>\n                        </div>\n                    </form>\n                </section>\n                <FormSortFilter \n                    sortToggle={sortToggle}\n                    sortSelection={sortSelection}\n                    handleSortToggle={handleSortToggle}\n                    handleSortSelection={handleSortSelection}\n                    filterInput={filterInput}\n                    handleFilterInput={handleFilterInput}\n                    handleFilterClear={handleFilterClear}\n                />\n            </Fragment>\n        )\n    }\n}\n\nexport default FormTreeActions;","import React from 'react';\nimport FormTreeActions from './FormTreeActions';\nimport Icon from './Icon';\n\nconst TreeActions = ({sortToggle, sortSelection, handleSortToggle, handleSortSelection, filterInput, handleFilterInput, handleFilterClear, closeTreeActions}) =>{\n    return(\n        <div className='main-col tree-actions'>\n            <div className='column-container'>\n                <header className='h-1'>\n                    <button type='button' className='close-tree-actions-btn' title='Close Tree Actions' onClick={() => closeTreeActions() }>\n                        <Icon icon='times' style={{width: 16}} />\n                    </button>\n                    <span>TREE ACTIONS</span>\n                </header>\n                <FormTreeActions \n                    sortToggle={sortToggle}\n                    sortSelection={sortSelection}\n                    handleSortToggle={handleSortToggle}\n                    handleSortSelection={handleSortSelection}\n                    filterInput={filterInput}\n                    handleFilterInput={handleFilterInput}\n                    handleFilterClear={handleFilterClear}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default TreeActions;","import React from 'react';\n\nconst LoadingTrees = ({msg, style}) => {\n    const tree = <svg style={{width: 40}} aria-hidden=\"true\" focusable=\"false\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path fill=\"currentColor\" d=\"M378.31 378.49L298.42 288h30.63c9.01 0 16.98-5 20.78-13.06 3.8-8.04 2.55-17.26-3.28-24.05L268.42 160h28.89c9.1 0 17.3-5.35 20.86-13.61 3.52-8.13 1.86-17.59-4.24-24.08L203.66 4.83c-6.03-6.45-17.28-6.45-23.32 0L70.06 122.31c-6.1 6.49-7.75 15.95-4.24 24.08C69.38 154.65 77.59 160 86.69 160h28.89l-78.14 90.91c-5.81 6.78-7.06 15.99-3.27 24.04C37.97 283 45.93 288 54.95 288h30.63L5.69 378.49c-6 6.79-7.36 16.09-3.56 24.26 3.75 8.05 12 13.25 21.01 13.25H160v24.45l-30.29 48.4c-5.32 10.64 2.42 23.16 14.31 23.16h95.96c11.89 0 19.63-12.52 14.31-23.16L224 440.45V416h136.86c9.01 0 17.26-5.2 21.01-13.25 3.8-8.17 2.44-17.47-3.56-24.26z\"></path></svg>;\n    return(\n        <div className='loading-container p-10 text-center'>\n            <div>{tree}</div>\n            <div>{tree}</div>\n            <div>{tree}</div>\n            <p style={{marginTop: 10, color: '#555'}}>Loading...</p>\n        </div>\n    )\n}\nexport default LoadingTrees;","import React, {Component, Fragment} from 'react';\nimport Icon from './Icon';\n\nclass Factory extends Component{\n    state = {\n        open: false\n    }\n    handleEditClick = () => {\n        this.props.handleFactorySelection(this.props.factory);\n    }\n    handleHeaderClick = () => {\n        this.setState({open: !this.state.open});\n    }\n    renderChildrenContent = () => {\n        const {_id, lowerBound, upperBound, numChildren, children} = this.props.factory;\n        if(children && children.length > 0){\n            return (\n                <Fragment>\n                    <div className='children-info'>\n                        <span>Children: <strong>{numChildren}</strong></span>\n                        <span>Lower Bound: <strong>{lowerBound}</strong></span>\n                        <span>Upper Bound: <strong>{upperBound}</strong></span>\n                    </div>\n                    <ul>\n                        {children.map((child, i)=> {\n                            return <li key={`${_id}-child-${i}`}><Icon icon='angle' style={{width: 5}} /> {child}</li>\n                        })}\n                    </ul>\n                </Fragment>\n            )\n        }\n        return(\n            <div className='no-content'>No children to show</div>\n        )\n    }\n    render(){\n        return(\n            <div className={`factory-container${this.state.open ? ' open': ''}${this.props.selected ? ' selected': ''}`}>\n                <div className='factory-header'>\n                    <div className='header-info' onClick={() => this.handleHeaderClick()}>\n                        <span className='angle'><Icon icon='angle' /></span>\n                        <span className='factory-name'>{this.props.factory.name}</span>\n                    </div>\n                    <button onClick={() => this.handleEditClick()} className='edit-btn'><Icon icon='pencil' style={{width: 20}} /></button>\n                </div>\n                <div className='factory-children-container'>{this.renderChildrenContent()}</div>\n            </div>\n        )\n    }\n}\n\nexport default Factory;","import React, {Component, Fragment} from 'react';\nimport LoadingTrees from './LoadingTrees';\nimport Factory from './Factory';\nimport Icon from './Icon';\n\nclass TreeRoot extends Component{\n    state = {\n        open: true\n    }\n    handleHeaderClick = () => {\n        this.setState({open: !this.state.open});\n    }\n    renderContent = () =>{\n        if(this.props.dataLoadingError){\n            return <p className='p-10 text-center'>An error occurred. Please try again later.</p>\n        }\n        else if (this.props.factories){\n            return (\n                    <Fragment>\n                        <div className='root'>\n                            <div className='header-info' onClick={() => this.handleHeaderClick()}>\n                                <span className='angle'><Icon icon='angle' /></span>\n                                <span>ROOT</span>\n                            </div>\n                        </div>\n                        <div className='all-factories'>{this.renderFactories()}</div>\n                    </Fragment>\n            )\n        }\n        return <LoadingTrees />\n    }\n    renderFactories = () =>{\n        var {selectedFactory, factories, filterInput} = this.props;\n        if(filterInput){\n            const re = new RegExp(filterInput, \"gi\");\n            factories = factories.filter(factory => re.test(factory.name));\n        }\n        return(\n            factories.map( factory =>{\n                return <Factory \n                            key={factory._id}\n                            factory={factory}\n                            selected={selectedFactory && selectedFactory._id === factory._id} \n                            handleFactorySelection={this.props.handleFactorySelection} \n                        />\n            })\n        )\n    }\n    render(){\n        return(\n            <div className='main-col tree'>\n                <div className={`column-container tree-container${this.state.open ? ' open' : ''}`}>\n                    <header className='h-2'>\n                        <button className='menu-btn' title='Open Tree Actions' onClick={() => this.props.openTreeActions()}>\n                            <span/><span/><span/>\n                        </button>\n                        <span>TREE</span>\n                    </header>\n                    {this.renderContent()}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TreeRoot;","import React, {Fragment} from 'react';\nimport FormInput from './FormInput';\n\nconst FormFactoryName = ({handleSubmit, editName, handleInputChange, disabled}) => {\n    return(\n        <Fragment>\n            <h5>EDIT FACTORY NAME</h5>\n            <section>               \n                <form onSubmit={event => handleSubmit('name', event)}>\n                    <FormInput \n                        label='Name:' \n                        placeholder='Enter a factory name' \n                        name='editName' \n                        value={editName}\n                        handleInputChange={handleInputChange}\n                    />\n                    <div className='form-group text-right'>\n                        <button type='submit' disabled={disabled} className={`btn btn-green${disabled ? ' disabled' : ''}`}>UPDATE NAME</button>\n                    </div>\n                </form>\n            </section>\n        </Fragment>\n    )\n}\n\nexport default FormFactoryName;","import React, {Fragment} from 'react';\nimport FormInput from './FormInput';\nimport FormSelect from './FormSelect';\n\nconst FormFactoryChildren = ({handleSubmit, handleInputChange, editLowerBound, editUpperBound, editNumChildren, disabled, formErrors}) => {\n    return(\n        <Fragment>\n            <h5>EDIT FACTORY CHILDREN</h5>\n            <section>               \n                <form onSubmit={event => handleSubmit('children', event)}>\n                    <FormInput \n                        type='number'\n                        label='Lower Bound:' \n                        placeholder='Enter a positive integer' \n                        name='editLowerBound' \n                        value={editLowerBound}\n                        handleInputChange={handleInputChange}\n                        error={formErrors.lowerBound}\n                    />\n                    <FormInput \n                        type='number'\n                        label='Upper Bound:' \n                        placeholder='Enter a positive integer' \n                        name='editUpperBound' \n                        value={editUpperBound}\n                        handleInputChange={handleInputChange}\n                        error={formErrors.upperBound}\n                    />\n                    <FormSelect\n                        name='editNumChildren'\n                        value={editNumChildren}\n                        handleInputChange={handleInputChange}\n                        error={formErrors.numChildren}\n                    />\n                    <div className='form-group text-right'>\n                        <button type='submit' disabled={disabled} className={`btn btn-green${disabled ? ' disabled' : ''}`}>UPDATE CHILDREN</button>\n                    </div>\n                </form>\n            </section>\n        </Fragment>\n    )\n}\n\nexport default FormFactoryChildren;","import React, {Component} from 'react';\nimport axios from 'axios';\nimport FormFactoryName from './FormFactoryName';\nimport FormFactoryChildren from './FormFactoryChildren';\nimport Icon from './Icon';\n\nclass EditFactory extends Component{\n    renderContent = () => {\n        const {selectedFactory, handleSubmit, handleInputChange, handleCancel, editName, editLowerBound, editUpperBound, editNumChildren, formErrors} = this.props;\n        return(\n            <div>\n                <div className='selection-container'>\n                    <div><strong>Selected Factory:</strong> {selectedFactory.name}</div>\n                    <button className='btn cancel-selection' onClick={() => handleCancel()}>\n                        <Icon icon='times' style={{width: 14}} />\n                    </button>\n                </div>\n                <FormFactoryName \n                    editName={editName}\n                    handleSubmit={handleSubmit}\n                    handleInputChange={handleInputChange}\n                    disabled={!editName || selectedFactory.name === editName}\n                />\n                <FormFactoryChildren\n                    editLowerBound={editLowerBound}\n                    editUpperBound={editUpperBound}\n                    editNumChildren={editNumChildren}\n                    disabled={this.isDisabled()}\n                    handleSubmit={handleSubmit}\n                    handleInputChange={handleInputChange}\n                    formErrors={formErrors}\n                />\n                <div className='delete-btn-container'>\n                    <button className='btn btn-yellow' onClick={() => this.handleDelete(selectedFactory._id)}>\n                        <Icon icon='trash' style={{width: 14, height: 16, verticalAlign: 'text-bottom', marginRight: 5}} /> \n                        <span>DELETE FACTORY</span>\n                    </button>\n                </div>\n            </div>\n        )\n    }\n    handleDelete = id => {\n        const response = window.confirm(\"Deleting a factory cannot be undone. Continue?\");\n        if(response){\n            axios.delete(`/api/delete-factory/${id}`);\n        }\n    }\n    isDisabled = () => {\n        const {editLowerBound, editUpperBound, editNumChildren, selectedFactory: {lowerBound, upperBound, numChildren}} = this.props;\n        //Ignore type when checking value equality\n        // eslint-disable-next-line\n        return lowerBound == editLowerBound && upperBound == editUpperBound && numChildren == editNumChildren;\n    }\n    render(){\n        return(\n            <div className='main-col edit-factory'>\n                <div className='column-container'>\n                    <header className='h-3'>EDIT FACTORY</header>\n                   {this.props.selectedFactory && this.renderContent()}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default EditFactory;","import React, {Component} from 'react';\nimport axios from 'axios';\nimport socketIOClient from \"socket.io-client\";\nimport {HOST_URI} from '../config/keys';\nimport TreeActions from './TreeActions';\nimport Tree from './Tree';\nimport EditFactory from './EditFactory';\nimport {checkForChildrenErrors, handleFactorySort} from '../utils';\n\nclass App extends Component {\n  state = {\n    selectedFactory: null,\n    sortSelection: 'timeDown',\n    filterInput: '',\n    sortToggle: false,\n    editName: '',\n    editLowerBound: '',\n    editUpperBound: '',\n    editNumChildren: '',\n    factories: null,\n    dataLoadingError: false,\n    hasFormError: false,\n    formErrors: {\n      lowerBound: null,\n      upperBound: null,\n      numChildren: null\n    },\n    showTreeActions: false\n  }\n  componentDidMount(){\n    axios.get('/api/all-factories')\n    .then( ({data, status}) => {\n        if(status === 200){\n            this.setState({factories: data});\n        }\n        else{\n            this.setState({dataLoadingError: true});\n        }\n    })\n    .catch( () => {\n        this.setState({dataLoadingError: true})\n    })\n    const socket = socketIOClient(HOST_URI);\n    socket.on(\"factoryAdded\", data => this.factoryAdded(data));\n    socket.on(\"factoryRemoved\", data => this.factoryRemoved(data));\n    socket.on(\"factoryUpdated\", data => this.factoryUpdated(data));\n  }\n  factoryAdded = factory => {\n      var factories = [...this.state.factories];\n      factories.push(factory);\n      this.setState({factories: handleFactorySort(factories, this.state.sortSelection), showTreeActions: false});\n  }\n  factoryRemoved = id => {\n      var factories = [...this.state.factories].filter( factory => factory._id !== id);\n      this.setState({factories, selectedFactory: null})\n  }\n  factoryUpdated = updatedFactory => {\n    const {name, lowerBound, upperBound, numChildren, _id} = updatedFactory;\n    const factories = [...this.state.factories].map( factory => {\n      if(factory._id === _id){\n        return updatedFactory;\n      }\n      return factory;\n    });\n    this.setState({\n      factories: handleFactorySort(factories, this.state.sortSelection), \n      selectedFactory: updatedFactory, \n      name, \n      lowerBound, \n      upperBound, \n      numChildren\n    });\n  }\n  handleFactorySelection = selectedFactory => {\n    const {name, lowerBound, upperBound, numChildren} = selectedFactory;\n    this.setState({\n      selectedFactory, \n      editName: name, \n      //Since 0 is a 'falsey' value, first check if it's 0 and then set to an empty string if it's not a legit value\n      editLowerBound: lowerBound === 0 ? 0 : lowerBound || '', \n      editUpperBound: upperBound === 0 ? 0 : upperBound || '',  \n      editNumChildren: numChildren === 0 ? 0 : numChildren || '', \n      formErrors: {lowerBound: null, upperBound: null, numChildren: null}\n    });\n  }\n  handleInputChange = event => {\n    const {value, name} = event.target;\n    //If there is an error, check to see if the error status has changed whenever the user modifies a form input\n    //Otherwise, just set the value\n    if(this.state.hasFormError){\n        this.setState({[name]: value}, () => {\n            this.setState({formErrors: checkForChildrenErrors(this.getFormValues())});\n        })\n    }\n    else{\n        this.setState({[name]: value});\n    }\n  }\n  getFormValues = type => {\n    if(type==='name'){\n      return {name: this.state.editName};\n    }\n    const {editLowerBound, editUpperBound, editNumChildren} = this.state;\n    return {lowerBound: editLowerBound, upperBound: editUpperBound, numChildren: editNumChildren};\n  }\n  handleSubmit = (type, event) => {\n    event.preventDefault();\n    if(type==='children'){\n      const values = this.getFormValues();\n      const formErrors = checkForChildrenErrors(values);\n      var hasFormError = false;\n      Object.keys(formErrors).forEach(val => {\n          if(formErrors[val]){\n              hasFormError = true;\n          }\n      })\n      if(hasFormError){\n          this.setState({formErrors, hasFormError: true});\n      }\n      else{\n        axios.put(`/api/update-factory/${this.state.selectedFactory._id}/${type}`, this.getFormValues(type));\n      }\n    }\n    else{\n      axios.put(`/api/update-factory/${this.state.selectedFactory._id}/${type}`, this.getFormValues(type));\n    }\n  }\n  handleCancel = () => {\n    this.setState({selectedFactory: null});\n  }\n  handleSortToggle = () => {\n    this.setState({sortToggle: !this.state.sortToggle})\n  }\n  handleSortSelection = ({target: {value}}) => {\n    this.setState({\n      sortToggle: false, \n      sortSelection: value, \n      factories: handleFactorySort(this.state.factories, value)\n    });\n  }\n  handleFilterInput = (event) => {\n    this.setState({\n      filterInput: event.target.value\n    });\n  }\n  handleFilterClear = () => {\n    this.setState({filterInput: ''});\n  }\n  closeTreeActions = () => {\n    this.setState({showTreeActions: false})\n  }\n  openTreeActions = () => {\n    this.setState({showTreeActions: true})\n  }\n  render() {\n    return (\n        <div className={`main-container${this.state.selectedFactory ? ' editing' : ''}${this.state.showTreeActions ? ' show-tree-actions' : ''}`}>\n          <TreeActions \n            sortToggle={this.state.sortToggle}\n            sortSelection={this.state.sortSelection}\n            handleSortToggle={this.handleSortToggle}\n            handleSortSelection={this.handleSortSelection}\n            filterInput={this.state.filterInput}\n            handleFilterInput={this.handleFilterInput}\n            handleFilterClear={this.handleFilterClear}\n            closeTreeActions={this.closeTreeActions}\n          />\n          <Tree \n            handleFactorySelection={this.handleFactorySelection} \n            factories={this.state.factories}\n            selectedFactory={this.state.selectedFactory}\n            dataLoadingError={this.state.dataLoadingError}\n            filterInput={this.state.filterInput}\n            openTreeActions={this.openTreeActions}\n          />\n          <EditFactory \n              selectedFactory={this.state.selectedFactory}\n              handleSubmit = {this.handleSubmit}\n              handleInputChange={this.handleInputChange}\n              handleCancel={this.handleCancel}\n              editName={this.state.editName}\n              editLowerBound={this.state.editLowerBound}\n              editUpperBound={this.state.editUpperBound}\n              editNumChildren={this.state.editNumChildren}\n              formErrors={this.state.formErrors}\n            />\n            <div className='edit-overlay'></div>\n            <div className='tree-actions-overlay'></div>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './stylesheets/index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}